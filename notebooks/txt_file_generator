import pandas as pd

def read_excel_file(file_path, sheet_name, header_row):
    return pd.read_excel(file_path, sheet_name=sheet_name, header=header_row-1)

def transform_data(df):
    df.rename(columns={'FLCN': 'bom_FLCN'}, inplace=True)
    df = df[df['SN'] != 0]
    df = df.astype(str)
    return df

def merge_dataframes(df1, df2, how, left_on, right_on):
    return pd.merge(df1, df2, how=how, left_on=left_on, right_on=right_on)

def create_mapping_dict(df, index_col, value_col):
    return df.drop_duplicates(index_col).set_index(index_col)[value_col].to_dict()

def post_process_data(df):
    df['uin'] = df['uin'].str.replace('-', '')
    df_load = df.groupby('SN').first().reset_index()
    return df_load

def split_uin_assign_build_level(df):
    df[['Chapter', 'UINSection', 'UINFigure', 'UINItem']] = df['uin'].str.split('-', expand=True)
    df = assign_build_level(df)
    return df

def assign_build_level(df):
    build_level = 1
    build_levels = []
    for i, row in df.iterrows():
        if i == 0:
            build_levels.append(build_level)
        else:
            if row['UINSection'] == '001':
                build_level = 3
            elif build_level != 3:
                build_level = 2
            build_levels.append(build_level)
    df['build_level'] = build_levels
    return df

def convert_dataframe_to_text(df, output_filename):
    output_lines = []
    # Conversion logic here
    with open(output_filename, "w") as file:
        file.write("\n".join(output_lines))

# Example usage
file_path = 'path_to_your_excel_file.xlsx'
sheet_name = 'Datasources'
start_row_num = 3

df_bom = read_excel_file(file_path, sheet_name, start_row_num)
df_bom = transform_data(df_bom)

# Continue with the rest of the operations using the defined functions


with open("LOADFILE_{EI_SERIAL_NUMBER}_OUTPUT.txt", "w") as file:
  file.write("\n".join(output_lines))
